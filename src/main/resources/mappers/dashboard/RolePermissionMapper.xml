<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pierce.data.dao.dashboard.RolePermissionMapper" >
    <resultMap id="BaseResultMap" type="com.pierce.data.pojo.dashboard.RolePermission" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="permission_id" property="permissionId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="locked" property="locked" jdbcType="INTEGER" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByRoleId">
    DELETE FROM sys_role_permission
    WHERE role_id = #{id}
  </delete>
    <insert id="insert" parameterType="com.pierce.data.pojo.dashboard.RolePermission" >
    insert into sys_role_permission (id, role_id, permission_id, 
      create_time, update_time, locked
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}, 
      now(), now(), #{locked}
      )
  </insert>
    <insert id="insertBatch">
        INSERT INTO sys_role_permission (role_id, permission_id, create_time, update_time)
        VALUES
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{roleId}, #{permissionId}, now(), now())
        </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.pierce.data.pojo.dashboard.RolePermission" >
    update sys_role_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      locked = #{deleteStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateStatusByRoleId">
    update sys_role_permission
    set locked = 0
    where role_id = #{roleId}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, role_id, permission_id, create_time, update_time, locked
    from sys_role_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap" >
    select id, role_id, permission_id, create_time, update_time, locked
    from sys_role_permission
  </select>
    <select id="selectPermissionsByRoleId" resultType="java.lang.Integer">
    SELECT
    permission_id
    FROM sys_role_permission
    WHERE role_id = #{id}
    AND locked = 0
  </select>
</mapper>